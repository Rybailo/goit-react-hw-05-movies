{"version":3,"file":"static/js/651.7b638779.chunk.js","mappings":"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","sources":["Pages/EditorList/EditorList.styled.jsx","Pages/EditorList/EditorList.jsx","components/Form.jsx/Form.styled.jsx","components/Form.jsx/Form.jsx","Pages/Movies/Movies.jsx","Services/api.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 30px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  text-align: center;\n  font-size: 20px;\n  margin: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n  display: flex;\n  flex-direction: column;\n\n  &:hover {\n    color: #0069ef;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, MovieLink } from './EditorList.styled';\n\nconst EditorList = ({ films, poster_path }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            <img\n              src={'http://image.tmdb.org/t/p/w300' + film.poster_path}\n              alt={film.title}\n            ></img>\n            {film.title}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nEditorList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EditorList;\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  border-radius: 4px 8px;\n  outline: none;\n\n  &:hover {\n    color: #0069ef;\n    border: 3px solid #0069ef;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 12px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 4px 8px;\n\n  &:hover {\n    color: #0069ef;\n    border: 3px solid #0069ef;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchForm, Input, Button } from './Form.styled';\n\nconst Form = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n\n      <Button type=\"submit\">Search</Button>\n    </SearchForm>\n  );\n};\nForm.prototype = {\n  searchMovies: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import { useState } from 'react';\nimport Loader from '../../components/Loader/Loader';\nimport EditorList from '../../Pages/EditorList/EditorList';\nimport Form from '../../components/Form.jsx/Form';\nimport { fetchSearchByKeyword } from '../../Services/api';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMoviesText, setNoMoviesText] = useState(false);\n\n  const searchMovies = queryMovie => {\n    setLoading(true);\n\n    fetchSearchByKeyword(queryMovie)\n      .then(searchResults => {\n        setSearchFilms(searchResults);\n        setNoMoviesText(searchResults.length === 0);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <main>\n      <Form searchMovies={searchMovies} />\n      {loading && <Loader />}\n      {noMoviesText && (\n        <p>There is no movies with this request. Please, try again</p>\n      )}\n      {searchFilms && <EditorList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '63a82337917a31c35dd7954063a86f96';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLink","Link","_templateObject3","_ref","films","location","poster_path","useLocation","_jsx","children","map","film","_jsxs","to","concat","id","state","from","src","alt","title","SearchForm","Input","Button","Form","searchMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","onSubmit","e","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","prototype","PropTypes","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","noMoviesText","setNoMoviesText","queryMovie","fetchSearchByKeyword","then","searchResults","length","catch","error","console","log","finally","Loader","EditorList","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}